{"ast":null,"code":"var _jsxFileName = \"/Users/zolyer/Documents/a1/naver_bidding/component-template/template/st_schedule_component/frontend/src/ScheduleComponent.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport ScheduleSelector from 'react-schedule-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ScheduleComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.getData = () => {\n      const scheduleData = this.props.args[\"schedule\"];\n      let convertedSchedule = {};\n      for (let template in scheduleData) {\n        convertedSchedule[template] = scheduleData[template].map(dateString => new Date(dateString));\n      }\n      console.log(convertedSchedule);\n      return convertedSchedule;\n    };\n    this.state = {\n      schedule: this.getData(),\n      selectedTemplate: Object.keys(this.getData())[0]\n    };\n    this.render = () => {\n      // 기존 props\n      const numDays = this.props.args[\"num_days\"];\n      const minTime = this.props.args[\"min_time\"];\n      const maxTime = this.props.args[\"max_time\"];\n      const hourlyChunks = this.props.args[\"hourly_chunks\"];\n      const dateFormat = this.props.args[\"date_format\"];\n      const startDate = this.props.args[\"start_date\"];\n      const events = Object.keys(this.getData());\n      let somedays = [new Date('1995-05-22T00:00:00Z')];\n      if (this.state.schedule[this.state.selectedTemplate].length > 0) {\n        somedays = this.state.schedule[this.state.selectedTemplate];\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Object.keys(this.state.schedule).map(template => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: this.state.selectedTemplate === template ? this.getSelectedColor(events) : 'grey'\n          },\n          onClick: () => this.setState({\n            selectedTemplate: template\n          }),\n          children: template\n        }, template, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(ScheduleSelector, {\n          selection: this.state.schedule[this.state.selectedTemplate],\n          numDays: numDays,\n          minTime: minTime,\n          maxTime: maxTime,\n          hourlyChunks: hourlyChunks,\n          dateFormat: dateFormat,\n          startDate: new Date(startDate),\n          columnGap: \"2px\",\n          rowGap: \"2px\",\n          onChange: this.handleChange,\n          renderDateCell: (date, selected, refSetter) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: selected ? this.getSelectedColor(events) : \"lightgray\",\n              width: \"100%\",\n              height: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this);\n    };\n    this.getSelectedColor = events => {\n      // 선택된 이벤트에 따라 다른 색상 반환 (색상 코드는 예시입니다)\n      switch (this.state.selectedTemplate) {\n        case events[0]:\n          return '#FF6C6C';\n        case events[1]:\n          return '#FFBD45';\n        case events[2]:\n          return '#3D9DF3';\n        case events[3]:\n          return '#3df355';\n        case events[4]:\n          return '#b33df3';\n        // 추가 이벤트 색상 조건\n        default:\n          return '#3d43f3';\n        // 기본 색상 (연한 파랑)\n      }\n    };\n    this.handleChange = newSchedule => {\n      this.setState(prevState => ({\n        schedule: {\n          ...prevState.schedule,\n          [this.state.selectedTemplate]: newSchedule\n        }\n      }));\n      const formattedDates = newSchedule.map(date => {\n        const options = {\n          weekday: 'short',\n          hour: 'numeric',\n          minute: 'numeric',\n          hour12: false\n        };\n        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\n        const [weekday, time] = formattedDate.split(' ');\n        return {\n          [weekday]: time\n        };\n      });\n      const jsonDates = formattedDates.reduce((acc, obj) => {\n        const key = Object.keys(obj)[0];\n        const value = Object.values(obj)[0];\n        if (acc[key]) {\n          acc[key].push(value);\n        } else {\n          acc[key] = [value];\n        }\n        return acc;\n      }, {});\n      Streamlit.setComponentValue(jsonDates);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(ScheduleComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","ScheduleSelector","jsxDEV","_jsxDEV","ScheduleComponent","constructor","args","getData","scheduleData","props","convertedSchedule","template","map","dateString","Date","console","log","state","schedule","selectedTemplate","Object","keys","render","numDays","minTime","maxTime","hourlyChunks","dateFormat","startDate","events","somedays","length","children","style","backgroundColor","getSelectedColor","onClick","setState","fileName","_jsxFileName","lineNumber","columnNumber","selection","columnGap","rowGap","onChange","handleChange","renderDateCell","date","selected","refSetter","width","height","newSchedule","prevState","formattedDates","options","weekday","hour","minute","hour12","formattedDate","Intl","DateTimeFormat","format","time","split","jsonDates","reduce","acc","obj","key","value","values","push","setComponentValue","_c","$RefreshReg$"],"sources":["/Users/zolyer/Documents/a1/naver_bidding/component-template/template/st_schedule_component/frontend/src/ScheduleComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport ScheduleSelector from 'react-schedule-selector'\n\ninterface State {\n  schedule: { [key: string]: Date[] }\n  selectedTemplate: string\n}\n\nclass ScheduleComponent extends StreamlitComponentBase<State> {\n  public getData = () => {\n    const scheduleData: { [key: string]: string[] } = this.props.args[\"schedule\"];\n    let convertedSchedule: { [key: string]: Date[] } = {};\n  \n    for (let template in scheduleData) {\n      convertedSchedule[template] = scheduleData[template].map(dateString => new Date(dateString));\n    }\n  \n    console.log(convertedSchedule);\n    return convertedSchedule;\n  }\n\n  public state = { schedule: this.getData(), selectedTemplate: Object.keys(this.getData())[0] }\n\n\n  public render = (): ReactNode => {\n    // 기존 props\n    const numDays = this.props.args[\"num_days\"]\n    const minTime = this.props.args[\"min_time\"]\n    const maxTime = this.props.args[\"max_time\"]\n    const hourlyChunks = this.props.args[\"hourly_chunks\"]\n    const dateFormat = this.props.args[\"date_format\"]\n    const startDate = this.props.args[\"start_date\"]\n\n    const events = Object.keys(this.getData())\n    \n    let somedays = [new Date('1995-05-22T00:00:00Z')]\n    if (this.state.schedule[this.state.selectedTemplate].length > 0) {\n      somedays = this.state.schedule[this.state.selectedTemplate]\n    }\n\n    return (\n      <div>\n        {Object.keys(this.state.schedule).map(template => (\n          <button\n            key={template}\n            style={{\n              backgroundColor: this.state.selectedTemplate === template\n                ? this.getSelectedColor(events)\n                : 'grey'\n            }}\n            onClick={() => this.setState({ selectedTemplate: template })}\n          >\n            {template}\n          </button>\n        ))}\n\n        <ScheduleSelector\n          selection={this.state.schedule[this.state.selectedTemplate]}\n          numDays={numDays}\n          minTime={minTime}\n          maxTime={maxTime}\n          hourlyChunks={hourlyChunks}\n          dateFormat={dateFormat}\n          startDate={new Date(startDate)}\n          columnGap=\"2px\"\n          rowGap=\"2px\"\n          onChange={this.handleChange}\n          renderDateCell={(date, selected, refSetter) => (\n            <div\n              style={{\n                backgroundColor: selected\n                  ? this.getSelectedColor(events)\n                  : \"lightgray\",\n                width: \"100%\",\n                height: \"100%\"\n              }}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n\n  private getSelectedColor = (events:any): string => {\n    // 선택된 이벤트에 따라 다른 색상 반환 (색상 코드는 예시입니다)\n    switch (this.state.selectedTemplate) {\n      case events[0]: return '#FF6C6C';\n      case events[1]: return '#FFBD45';\n      case events[2]: return '#3D9DF3';\n      case events[3]: return '#3df355';\n      case events[4]: return '#b33df3';\n      // 추가 이벤트 색상 조건\n      default: return '#3d43f3'; // 기본 색상 (연한 파랑)\n    }\n  }\n  private handleChange = (newSchedule: any) => {\n    this.setState(prevState => ({\n      schedule: {\n        ...prevState.schedule,\n        [this.state.selectedTemplate]: newSchedule\n      }\n    }));\n\n    const formattedDates: string[] = newSchedule.map((date:any) => {\n      const options: Intl.DateTimeFormatOptions = {\n        weekday: 'short',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n      };\n      const formattedDate: string = new Intl.DateTimeFormat('en-US', options).format(date);\n      const [weekday, time]: string[] = formattedDate.split(' ');\n      return { [weekday]: time };\n    });\n\n    const jsonDates: { [key: string]: string[] } = formattedDates.reduce(\n      (acc:any, obj:any) => {\n        const key: string = Object.keys(obj)[0];\n        const value: string = Object.values(obj)[0] as string;\n        if (acc[key]) {\n          acc[key].push(value);\n        } else {\n          acc[key] = [value];\n        }\n        return acc;\n      },\n      {}\n    );\n    Streamlit.setComponentValue(jsonDates)\n  }\n}\n\nexport default withStreamlitConnection(ScheduleComponent)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}