{"ast":null,"code":"var _jsxFileName = \"/Users/zolyer/Documents/a1/naver_bidding/component-template/template/st_schedule_component/frontend/src/ScheduleComponent.tsx\";\nimport { Streamlit, StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport ScheduleSelector from 'react-schedule-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ScheduleComponent extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      schedule: [],\n      selectedEvent: ''\n    };\n    this.render = () => {\n      // 기존 props\n      const numDays = this.props.args[\"num_days\"];\n      const minTime = this.props.args[\"min_time\"];\n      const maxTime = this.props.args[\"max_time\"];\n      const hourlyChunks = this.props.args[\"hourly_chunks\"];\n      const dateFormat = this.props.args[\"date_format\"];\n      const startDate = this.props.args[\"start_date\"];\n\n      // 새로 추가된 events prop\n      const events = this.props.args[\"events\"];\n      console.log(events[3]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [events.map(event => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: this.state.selectedEvent === event ? 'blue' : 'grey'\n          },\n          onClick: () => this.setState({\n            selectedEvent: event\n          }),\n          children: event\n        }, event, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(ScheduleSelector, {\n          selection: this.state.schedule,\n          numDays: numDays,\n          minTime: minTime,\n          maxTime: maxTime,\n          hourlyChunks: hourlyChunks,\n          dateFormat: dateFormat,\n          startDate: new Date(startDate),\n          columnGap: \"2px\",\n          rowGap: \"2px\",\n          onChange: this.handleChange\n          // 선택 영역 스타일 변경 (예시)\n          ,\n          selectedColor: this.getSelectedColor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this);\n    };\n    this.getSelectedColor = () => {\n      // 선택된 이벤트에 따라 다른 색상 반환 (색상 코드는 예시입니다)\n      switch (this.state.selectedEvent) {\n        case 'event1':\n          return '#FFD700';\n        // 금색\n        case 'event2':\n          return '#FF69B4';\n        // 핑크색\n        // 추가 이벤트 색상 조건\n        default:\n          return '#ADD8E6';\n        // 기본 색상 (연한 파랑)\n      }\n    };\n    this.handleChange = newSchedule => {\n      this.setState({\n        schedule: newSchedule\n      });\n      const formattedDates = newSchedule.map(date => {\n        const options = {\n          weekday: 'short',\n          hour: 'numeric',\n          minute: 'numeric',\n          hour12: false\n        };\n        const formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\n        const [weekday, time] = formattedDate.split(' ');\n        return {\n          [weekday]: time\n        };\n      });\n      const jsonDates = formattedDates.reduce((acc, obj) => {\n        const key = Object.keys(obj)[0];\n        const value = Object.values(obj)[0];\n        if (acc[key]) {\n          acc[key].push(value);\n        } else {\n          acc[key] = [value];\n        }\n        return acc;\n      }, {});\n      Streamlit.setComponentValue(jsonDates);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(ScheduleComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","ScheduleSelector","jsxDEV","_jsxDEV","ScheduleComponent","constructor","args","state","schedule","selectedEvent","render","numDays","props","minTime","maxTime","hourlyChunks","dateFormat","startDate","events","console","log","children","map","event","style","backgroundColor","onClick","setState","fileName","_jsxFileName","lineNumber","columnNumber","selection","Date","columnGap","rowGap","onChange","handleChange","selectedColor","getSelectedColor","newSchedule","formattedDates","date","options","weekday","hour","minute","hour12","formattedDate","Intl","DateTimeFormat","format","time","split","jsonDates","reduce","acc","obj","key","Object","keys","value","values","push","setComponentValue","_c","$RefreshReg$"],"sources":["/Users/zolyer/Documents/a1/naver_bidding/component-template/template/st_schedule_component/frontend/src/ScheduleComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport ScheduleSelector from 'react-schedule-selector'\n\ninterface State {\n  schedule: Array<Date>\n  selectedEvent: string\n}\n\nclass ScheduleComponent extends StreamlitComponentBase<State> {\n  public state = { schedule: [], selectedEvent: '' }\n\n  public render = (): ReactNode => {\n    // 기존 props\n    const numDays = this.props.args[\"num_days\"]\n    const minTime = this.props.args[\"min_time\"]\n    const maxTime = this.props.args[\"max_time\"]\n    const hourlyChunks = this.props.args[\"hourly_chunks\"]\n    const dateFormat = this.props.args[\"date_format\"]\n    const startDate = this.props.args[\"start_date\"]\n\n    // 새로 추가된 events prop\n    const events = this.props.args[\"events\"]\n    console.log(events[3])\n\n    return (\n      <div>\n        {/* 이벤트 버튼 */}\n        {events.map((event:any) => (\n          <button\n            key={event}\n            style={{ backgroundColor: this.state.selectedEvent === event ? 'blue' : 'grey' }}\n            onClick={() => this.setState({ selectedEvent: event })}\n          >\n            {event}\n          </button>\n        ))}\n\n        <ScheduleSelector\n          selection={this.state.schedule}\n          numDays={numDays}\n          minTime={minTime}\n          maxTime={maxTime}\n          hourlyChunks={hourlyChunks}\n          dateFormat={dateFormat}\n          startDate={new Date(startDate)}\n          columnGap=\"2px\"\n          rowGap=\"2px\"\n          onChange={this.handleChange}\n          // 선택 영역 스타일 변경 (예시)\n          selectedColor={this.getSelectedColor()}\n        />\n      </div>\n    )\n  }\n\n  private getSelectedColor = (): string => {\n    // 선택된 이벤트에 따라 다른 색상 반환 (색상 코드는 예시입니다)\n    switch (this.state.selectedEvent) {\n      case 'event1': return '#FFD700'; // 금색\n      case 'event2': return '#FF69B4'; // 핑크색\n      // 추가 이벤트 색상 조건\n      default: return '#ADD8E6'; // 기본 색상 (연한 파랑)\n    }\n  }\n  private handleChange = (newSchedule: any) => {\n    this.setState({ schedule: newSchedule })\n\n    const formattedDates: string[] = newSchedule.map((date:any) => {\n      const options: Intl.DateTimeFormatOptions = {\n        weekday: 'short',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false,\n      };\n      const formattedDate: string = new Intl.DateTimeFormat('en-US', options).format(date);\n      const [weekday, time]: string[] = formattedDate.split(' ');\n      return { [weekday]: time };\n    });\n\n    const jsonDates: { [key: string]: string[] } = formattedDates.reduce(\n      (acc:any, obj:any) => {\n        const key: string = Object.keys(obj)[0];\n        const value: string = Object.values(obj)[0] as string;\n        if (acc[key]) {\n          acc[key].push(value);\n        } else {\n          acc[key] = [value];\n        }\n        return acc;\n      },\n      {}\n    );\n    Streamlit.setComponentValue(jsonDates)\n  }\n}\n\nexport default withStreamlitConnection(ScheduleComponent)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}