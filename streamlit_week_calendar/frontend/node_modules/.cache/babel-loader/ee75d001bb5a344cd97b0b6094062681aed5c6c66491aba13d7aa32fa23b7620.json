{"ast":null,"code":"import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import React from\"react\";import ScheduleSelector from'react-schedule-selector';import Button from'@mui/material/Button';import'./custom.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class ScheduleComponent extends StreamlitComponentBase{constructor(){super(...arguments);this.getData=()=>{const scheduleData=this.props.args[\"schedule\"];let convertedSchedule={};for(let template in scheduleData){convertedSchedule[template]=scheduleData[template].map(dateString=>new Date(dateString));}return convertedSchedule;};this.state={schedule:this.getData(),selectedTemplate:Object.keys(this.getData())[0]};this.render=()=>{// 기존 props\nconst numDays=this.props.args[\"num_days\"];const minTime=this.props.args[\"min_time\"];const maxTime=this.props.args[\"max_time\"];const hourlyChunks=this.props.args[\"hourly_chunks\"];const dateFormat=this.props.args[\"date_format\"];const startDate=this.props.args[\"start_date\"];const templates=Object.keys(this.getData());return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"ScheduleBtnWrapper\",children:Object.keys(this.state.schedule).map(template=>/*#__PURE__*/_jsx(Button,{variant:\"contained\",style:{backgroundColor:this.getSelectedColor(template,templates)},onClick:()=>this.setState({selectedTemplate:template}),children:template},template))}),/*#__PURE__*/_jsx(\"div\",{className:\"ScheduleComponentWrapper\",children:/*#__PURE__*/_jsx(ScheduleSelector,{selection:this.state.schedule[this.state.selectedTemplate],numDays:numDays,minTime:minTime,maxTime:maxTime,hourlyChunks:hourlyChunks,dateFormat:dateFormat,startDate:new Date(startDate),columnGap:\"2px\",rowGap:\"2px\",onChange:this.handleChange,renderDateCell:(date,selected,refSetter)=>/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:selected?this.getSelectedColor(this.state.selectedTemplate,templates):this.isSelectedInOtherTemplate(date)?this.getOtherColorForDate(date,Object.keys(this.state.schedule))// 다른 템플릿에서 선택된 날짜에 대한 색상\n:\"lightgray\",// 선택되지 않은 경우의 기본 색상\nwidth:\"100%\",height:\"100%\"}}),renderTimeLabel:time=>/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"100%\",transform:\"rotate(-90deg) scaleX(-1)\"},children:/*#__PURE__*/_jsx(\"p\",{children:new Intl.DateTimeFormat('en-US',{hour:'numeric',hour12:false}).format(time)})}),renderDateLabel:date=>/*#__PURE__*/_jsx(\"div\",{style:{width:\"50%\",height:\"50%\",transform:\"rotate(-90deg) scaleX(-1)\"},children:/*#__PURE__*/_jsx(\"p\",{children:new Intl.DateTimeFormat('en-US',{weekday:'short'}).format(date)})})})})]});};this.getSelectedColor=(template,templates)=>{// 선택된 이벤트에 따라 다른 색상 반환 (색상 코드는 예시입니다)\nswitch(template){case templates[0]:return'#FF6C6C';case templates[1]:return'#FFBD45';case templates[2]:return'#3D9DF3';case templates[3]:return'#3df355';case templates[4]:return'#b33df3';// 추가 이벤트 색상 조건\ndefault:return'#3d43f3';// 기본 색상 (연한 파랑)\n}};this.isSelectedInOtherTemplate=date=>{for(let template of Object.keys(this.state.schedule)){if(template!==this.state.selectedTemplate){if(this.state.schedule[template].some(d=>d.getTime()===date.getTime())){return true;}}}return false;};this.getOtherColorForDate=(date,templates)=>{for(let template of templates){if(this.state.schedule[template].some(d=>d.getTime()===date.getTime())){return this.getSelectedColor(template,templates);// 이전에 정의된 getSelectedColor 함수 사용\n}}return\"lightgray\";// 기본 색상\n};this.handleChange=newSchedule=>{this.setState(prevState=>({schedule:{...prevState.schedule,[this.state.selectedTemplate]:newSchedule}}));const jsonDates={};Object.keys(this.state.schedule).forEach(template=>{jsonDates[template]=this.state.schedule[template].reduce((acc,date)=>{const options={weekday:'short',hour:'numeric',minute:'numeric',hour12:false};const formattedDate=new Intl.DateTimeFormat('en-US',options).format(date);const[weekday,time]=formattedDate.split(' ');if(!acc[weekday]){acc[weekday]=[];}acc[weekday].push(time);return acc;},{});});Streamlit.setComponentValue(jsonDates);};}}export default withStreamlitConnection(ScheduleComponent);","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","ScheduleSelector","Button","jsx","_jsx","jsxs","_jsxs","ScheduleComponent","constructor","arguments","getData","scheduleData","props","args","convertedSchedule","template","map","dateString","Date","state","schedule","selectedTemplate","Object","keys","render","numDays","minTime","maxTime","hourlyChunks","dateFormat","startDate","templates","children","className","variant","style","backgroundColor","getSelectedColor","onClick","setState","selection","columnGap","rowGap","onChange","handleChange","renderDateCell","date","selected","refSetter","isSelectedInOtherTemplate","getOtherColorForDate","width","height","renderTimeLabel","time","transform","Intl","DateTimeFormat","hour","hour12","format","renderDateLabel","weekday","some","d","getTime","newSchedule","prevState","jsonDates","forEach","reduce","acc","options","minute","formattedDate","split","push","setComponentValue"],"sources":["/Users/zolyer/Documents/a1/naver_bidding/component-template/template/st_schedule_component/frontend/src/ScheduleComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport ScheduleSelector from 'react-schedule-selector'\nimport Button from '@mui/material/Button'\nimport './custom.css'\n\ninterface State {\n  schedule: { [key: string]: Date[] }\n  selectedTemplate: string\n}\n\nclass ScheduleComponent extends StreamlitComponentBase<State> {\n  public getData = () => {\n    const scheduleData: { [key: string]: string[] } = this.props.args[\"schedule\"];\n    let convertedSchedule: { [key: string]: Date[] } = {};\n  \n    for (let template in scheduleData) {\n      convertedSchedule[template] = scheduleData[template].map(dateString => new Date(dateString));\n    }\n    return convertedSchedule;\n  }\n\n  public state = { schedule: this.getData(), selectedTemplate: Object.keys(this.getData())[0] }\n\n\n  public render = (): ReactNode => {\n    // 기존 props\n    const numDays = this.props.args[\"num_days\"]\n    const minTime = this.props.args[\"min_time\"]\n    const maxTime = this.props.args[\"max_time\"]\n    const hourlyChunks = this.props.args[\"hourly_chunks\"]\n    const dateFormat = this.props.args[\"date_format\"]\n    const startDate = this.props.args[\"start_date\"]\n\n    const templates = Object.keys(this.getData())\n\n    return (\n      <div>\n        <div className=\"ScheduleBtnWrapper\">\n          {Object.keys(this.state.schedule).map(template => (\n            <Button\n              variant=\"contained\"\n              key={template}\n              style={{\n                backgroundColor: this.getSelectedColor(template, templates)\n              }}\n              onClick={() => this.setState({ selectedTemplate: template })}\n            >\n              {template}\n            </Button>\n          ))}\n        </div>\n        <div className=\"ScheduleComponentWrapper\">\n          <ScheduleSelector\n            selection={this.state.schedule[this.state.selectedTemplate]}\n            numDays={numDays}\n            minTime={minTime}\n            maxTime={maxTime}\n            hourlyChunks={hourlyChunks}\n            dateFormat={dateFormat}\n            startDate={new Date(startDate)}\n            columnGap=\"2px\"\n            rowGap=\"2px\"\n            onChange={this.handleChange}\n            renderDateCell={(date, selected, refSetter) => (\n              <div\n                style={{\n                  backgroundColor: selected \n                    ? this.getSelectedColor(this.state.selectedTemplate, templates)\n                      : this.isSelectedInOtherTemplate(date) \n                        ? this.getOtherColorForDate(date, Object.keys(this.state.schedule)) // 다른 템플릿에서 선택된 날짜에 대한 색상\n                    : \"lightgray\", // 선택되지 않은 경우의 기본 색상\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n              />\n            )}\n            renderTimeLabel={(time) => (\n              <div style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  transform: \"rotate(-90deg) scaleX(-1)\"\n                }}>\n                  <p>\n                    {new Intl.DateTimeFormat('en-US', {hour:'numeric', hour12:false}).format(time)}\n                  </p>\n              </div>\n            )}\n            renderDateLabel={(date) => (\n              <div style={{\n                  width: \"50%\",\n                  height: \"50%\",\n                  transform: \"rotate(-90deg) scaleX(-1)\"\n                }}>\n                  <p>\n                    {new Intl.DateTimeFormat('en-US', {weekday:'short'}).format(date)}\n                  </p>\n              </div>\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  private getSelectedColor = (template:any, templates:any): string => {\n    // 선택된 이벤트에 따라 다른 색상 반환 (색상 코드는 예시입니다)\n    switch (template) {\n      case templates[0]: return '#FF6C6C';\n      case templates[1]: return '#FFBD45';\n      case templates[2]: return '#3D9DF3';\n      case templates[3]: return '#3df355';\n      case templates[4]: return '#b33df3';\n      // 추가 이벤트 색상 조건\n      default: return '#3d43f3'; // 기본 색상 (연한 파랑)\n    }\n  }\n\n  private isSelectedInOtherTemplate = (date: Date): boolean => {\n    for (let template of Object.keys(this.state.schedule)) {\n      if (template !== this.state.selectedTemplate) {\n        if (this.state.schedule[template].some(d => d.getTime() === date.getTime())) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private getOtherColorForDate = (date: Date, templates: string[]): string => {\n    for (let template of templates) {\n      if (this.state.schedule[template].some(d => d.getTime() === date.getTime())) {\n        return this.getSelectedColor(template, templates); // 이전에 정의된 getSelectedColor 함수 사용\n      }\n    }\n    return \"lightgray\"; // 기본 색상\n  }\n\n  private handleChange = (newSchedule: any) => {\n    this.setState(prevState => ({\n      schedule: {\n        ...prevState.schedule,\n        [this.state.selectedTemplate]: newSchedule\n      }\n    }));\n\n    const jsonDates: { [key: string]: any } = {};\n\n    Object.keys(this.state.schedule).forEach((template) => {\n      jsonDates[template] = this.state.schedule[template].reduce((acc: any, date: Date) => {\n        const options: Intl.DateTimeFormatOptions = {\n          weekday: 'short', hour: 'numeric', minute: 'numeric', hour12: false,\n        };\n        const formattedDate: string = new Intl.DateTimeFormat('en-US', options).format(date);\n        const [weekday, time]: string[] = formattedDate.split(' ');\n\n        if (!acc[weekday]) {\n          acc[weekday] = [];\n        }\n        acc[weekday].push(time);\n        return acc;\n      }, {});\n    });\n    Streamlit.setComponentValue(jsonDates)\n  }\n}\n\nexport default withStreamlitConnection(ScheduleComponent)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}